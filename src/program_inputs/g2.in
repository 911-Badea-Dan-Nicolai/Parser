States: program, declist, declaration, type1, arraydecl, type, cmpdstmt, stmtlist, stmt, simplstmt, structstmt, assignstmt, expression, term, factor, iostmt, ifstmt, whilestmt, condition, RELATION
Alphabet: var, ;, start, finish, boolean, char, int, grid, [, ], <-, +, -, *, /, (, ), read, write, if, then, otherwise, while, run, <, <=, =, >=, >, %, identifier, constint, constchar, conststring
Begin state: program
Transitions:
program::=var declist ; cmpdstmt .
declist::=declaration|declaration ; declist
declaration::=type identifier
type1::=boolean|char|int
arraydecl::=type1 grid [ constint ]
type::=type1|arraydecl
cmpdstmt::=start stmtlist finish
stmtlist::=stmt|stmt ; stmtlist
stmt::=simplstmt|structstmt
simplstmt::=assignstmt|iostmt
assignstmt::=identifier <- expression
expression::=expression + term|expression - term|term
term::=term * factor|term / factor|factor
factor::=( expression )|identifier|constint
iostmt::=read identifier|write identifier|write constinteger|write conststring|write constchar
structstmt::=smpdstmt|ifstmt|whilestmt
ifstmt::=if condition then stmt|if condition then stmt otherwise stmt
whilestmt::=while condition run stmt
condition::=expression RELATION expression
RELATION::=<|<=|=|<>|>=|>